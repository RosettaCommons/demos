# ee_1 and ee_2 correspond to F21
SET_CONDITION ee1nat = ee_1 in { F }
SET_CONDITION ee2nat = ee_2 in { F }

# ee_3 and ee_4 correspond to A24
SET_CONDITION ee3nat = ee_3 in { A }
SET_CONDITION ee4nat = ee_4 in { A }

# ee_5 and ee_6 correspond to L25
SET_CONDITION ee5nat = ee_5 in { L }
SET_CONDITION ee6nat = ee_6 in { L }

# ee_7 and ee_8 correspond to A28
SET_CONDITION ee7nat = ee_7 in { A }
SET_CONDITION ee8nat = ee_8 in { A }

# ee_9 and ee_10 correspond to 32G
SET_CONDITION ee9nat  = ee_9  in { G }
SET_CONDITION ee10nat = ee_10 in { G }

# ee_11 and ee_12 correspond to 44L
SET_CONDITION ee11nat = ee_11 in { L }
SET_CONDITION ee12nat = ee_12 in { L }

# ee_13 and ee_14 correspond to 46V
SET_CONDITION ee13nat = ee_13 in { V }
SET_CONDITION ee14nat = ee_14 in { V }

# ee_15 and ee_16 correspond to 48W
SET_CONDITION ee15nat = ee_15 in { W }
SET_CONDITION ee16nat = ee_16 in { W }

# count the number of mutations on A and B
SUB_EXPRESSION nnat_A = ee1nat + ee3nat + ee5nat + ee7nat + ee9nat  + ee11nat + ee13nat + ee15nat
SUB_EXPRESSION nnat_B = ee2nat + ee4nat + ee6nat + ee8nat + ee10nat + ee12nat + ee14nat + ee16nat

# limit 5 mutations on A, 5 mutations on B
SUB_EXPRESSION mut_A_penalty = ite( lt( nnat_A, 3 ), 3 - nnat_A, 0 )
SUB_EXPRESSION mut_B_penalty = ite( lt( nnat_B, 3 ), 3 - nnat_B, 0 )

# penalize homogeneity
SUB_EXPRESSION ee12s = eq( ee_1, ee_2 )
SUB_EXPRESSION ee34s = eq( ee_3, ee_4 )
SUB_EXPRESSION ee56s = eq( ee_5, ee_6 )
SUB_EXPRESSION ee78s = eq( ee_7, ee_8 )
SUB_EXPRESSION ee910s = eq( ee_9, ee_10 )
SUB_EXPRESSION ee1112s = eq( ee_11, ee_12 )
SUB_EXPRESSION ee1314s = eq( ee_13, ee_14 )
SUB_EXPRESSION ee1516s = eq( ee_15, ee_16 )

SUB_EXPRESSION n_homogenous = ee12s + ee34s + ee56s + ee78s + ee910s + ee1112s + ee1314s + ee1516s
SUB_EXPRESSION homogeneity_penalty = ite( gt( n_homogenous, 4 ), n_homogenous - 4, 0 )

SCORE 3 * ( mut_A_penalty + mut_B_penalty ) + homogeneity_penalty
