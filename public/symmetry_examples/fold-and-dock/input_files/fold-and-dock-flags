-run:protocol broker
-broker:setup fold-and-dock/input_files/setup_init.tpb
# symmetry options
-symmetry:symmetry_definition ./fold-and-dock/input_files/symm_def_trimer.dat # This is the location of the symmetry definition file
-symmetry:initialize_rigid_body_dofs # Initialize the rigid body positions of the subunits according to the symmetry definition file
# fold-and-dock options
-fold_and_dock:rigid_body_cycles 1
-fold_and_dock:rigid_body_frequency 5
-fold_and_dock:rotate_anchor_to_x
-run:reinitialize_mover_for_each_job # We need to start with a single subunit for each simulation
-score:weights score13_env_hb #You may want to use the score12_full energy function instead here.
-abinitio::recover_low_in_stages 0
-abinitio:rg_reweight 0.001 # This makes sure that coiled-coil proteins can be predicted. For regular proteins adjusting this may help
-abinitio:use_filters false
# packing options
-packing:ex1
-packing:ex1:level 1
-packing:ex2
-packing:ex2:level 1
-packing:extrachi_cutoff 0
# input data
-in:file:fasta ./fold-and-dock/input_files/2akf_.fasta
-in:file:frag9 ./fold-and-dock/input_files/frags.200.9mers
-in:file:frag3 ./fold-and-dock/input_files/frags.200.3mers
-evaluation:rmsd_target fold-and-dock/input_files/2akf.pdb
-evaluation:rmsd_column _
-evaluation:symmetric_rmsd # Necessary because we have 3 chains. Note we use evaluators to calculate rmsd. -symmetry:symmetric_rmsd will notwork in this case.
-nstruct 1
-out:file:silent_struct_type binary # Only this silent type is compatible with symmetry
-relax:jump_move # Allows rb movements (together sidechain and backbone)
# output options
#-out:path:pdb ./ # pdb output is not recommended for production runs
# -out:pdb
-out:file:silent output_files/2akf.out
-out:file:scorefile output_files/score.sc
-overwrite
