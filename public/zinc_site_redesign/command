# This command file allows the Rosetta test server to run this demo in an automated fashion, to ensure that it keeps working as
# Rosetta changes.  This file is NOT intended to be part of the demo with which the user interacts.

cd %(workdir)s

#Step 1
cd 1_Analyze_ZincSite
python $ROSETTA_TOOLS/zinc_site_redesign/analyze_zinc_site.py -f 1A4L.pdb >out1.log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
cd ..

#Step 2
cd 2_CleanPDB
python $ROSETTA_TOOLS/zinc_site_redesign/cleanPDBfile.py -f 1A4L.pdb >out1.log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
python $ROSETTA_TOOLS/zinc_site_redesign/cleanPDBfile.py -f 1A4L.pdb -c B >out2.log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
python $ROSETTA_TOOLS/zinc_site_redesign/cleanPDBfile.py -f PDBFILE -m METAL -n NR >out3.log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
cd ..

#Step 3
cd 3_AlignTS
python $ROSETTA_TOOLS/zinc_site_redesign/align.py -f 1A4L_clean_A.pdb -l LG_0001.pdb >out1.log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
python $ROSETTA_TOOLS/zinc_site_redesign/generate_metal_cstfile.py -f 1A4L_clean_A.pdb -m ZN -a aligned_ligand.pdb >out2.log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
cd ..

#Step 4
cd 4_CstOpt_optional
[ -x %(bin)s/fixbb.%(binext)s ] || exit 1
%(bin)s/enzyme_design.%(binext)s %(additional_flags)s @optcst.flags -linmem_ig 10 -in:file::s rosetta_cst.pdb -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
cd ..

#Step 5
cd 5_Match/
[ -x %(bin)s/match.%(binext)s ] || exit 1
%(bin)s/match.%(binext)s %(additional_flags)s @general_matching.flags @scaf.flags @subs.flags -linmem_ig 10 -in:file::s 1A4L_clean_A_r.pdb -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
cd .. 

#Step 6
cd 6_Design
[ -x %(bin)s/enzyme_design.%(binext)s ] || exit 1
%(bin)s/enzyme_design.%(binext)s %(additional_flags)s @enzdes.flags -correct -linmem_ig 10 -in:file:s UM_1_H15H17H214D295Q58_1A4L_clean_A_r_1A4L_clean_A_1.pdb -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so
cd..




%(bin)s/fixbb.%(binext)s %(additional_flags)s -in:file:s 1l2y.pdb -in:file:fullatom -resfile resfile.txt -nstruct 1 -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

[ -x %(bin)s/fixbb.%(binext)s ] || exit 1
%(bin)s/fixbb.%(binext)s %(additional_flags)s -in:file:s 1l2y.pdb -in:file:fullatom -resfile resfile.txt -nstruct 1 -ex1 -ex2 -ex3 -ex4 -extrachi_cutoff 0 -out:prefix run2 -out:file:scorefile run2.sc -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

[ -x %(bin)s/fixbb.%(binext)s ] || exit 1
%(bin)s/fixbb.%(binext)s %(additional_flags)s -in:file:s 1l2y.pdb -in:file:fullatom -resfile resfile.txt -nstruct 1 -ex1 -ex2 -ex3 -ex4 -extrachi_cutoff 0 -out:prefix run3 -out:file:scorefile run3.sc -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so


6_Design/README.md:$> <path_to_Rosetta_directory>/main/source/bin/enzyme_design.default.linuxgccrelease @enzdes.flags -correct -linmem_ig 10 -in:file:s UM_1_H15H17H214D295Q58_1A4L_clean_A_r_1A4L_clean_A_1.pdb
7_SemiAutomated_Refine/README.md:$> python $ROSETTA_TOOLS/zinc_site_redesign/generate_residuefile.py UM_1_H15H17H214D295Q58_1A4L_clean_A_r_1A4L_clean_A_1__DE_1.pdb
8_Docking/README.md:$> <path_to_Rosetta_directory>/main/source/bin/ligand_dock.default.linuxgccrelease @flags
