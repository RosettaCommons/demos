# This is a test script of the demo, created by parsing testable commands given in the demo's README.md file.
# Commands that need to be tested should start with '$<'  to indicate that the line will be written to this file and tested.
# - Documentation XRW 2016 Team - 

cd %(workdir)s

[ -x %(bin)s/fragment_picker.%(binext)s ] || exit 1
[ -x %(bin)s/r_frag_quality.%(binext)s ] || exit 1

# fragment_picking


 %(bin)s/fragment_picker.%(binext)s @BestFragmentsProtocol/flags -in::file::vall <path-to-Rosetta>/main/database/sampling/small.vall.gz  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log1
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

 %(bin)s/r_frag_quality.%(binext)s -in:file:native BestFragmentsProtocol/input_files/2jsvX.pdb -f BestFragmentsProtocol/output_files/frags.200.3mers  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log2
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

 %(bin)s/fragment_picker.%(binext)s @NullFragments/flags -in::file::vall %(minidir)s/main/database/sampling/small.vall.gz  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log3
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

 %(bin)s/fragment_picker.%(binext)s @fragment_picking_torsion_class_score/flags -in::file::vall %(minidir)s/main/database/sampling/small.vall.gz  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log4
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

 %(bin)s/fragment_picker.%(binext)s @fragment_picking_with_psi_jufo_sam_L1_quota/flags -in::file::vall %(minidir)s/main/database/sampling/small.vall.gz  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log5
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

 %(bin)s/fragment_picker.%(binext)s @fragment_picking_with_quota/flags -in::file::vall %(minidir)s/main/database/sampling/small.vall.gz  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log6
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

 %(bin)s/fragment_picker.%(binext)s @fragment_picking_with_quota_and_restraints/flags -in::file::vall %(minidir)s/main/database/sampling/small.vall.gz  -database %(database)s -run:constant_seed -nodelay  2>&1 | egrep -vf /Users/raemisch/Rosetta/main/tests/integration/ignore_list > log7
test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so


